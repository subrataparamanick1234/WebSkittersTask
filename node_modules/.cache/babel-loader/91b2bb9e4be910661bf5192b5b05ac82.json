{"ast":null,"code":"/* eslint-disable prettier/prettier */\n\n/* eslint-disable arrow-body-style */\nimport { Firebase, db } from 'database';\nimport { toast } from 'react-toastify';\nimport jwtDecode from 'jwt-decode';\nexport const userLoginHelper = data => {\n  return {\n    type: 'SET_USER_AUTH',\n    payload: data\n  };\n};\n\nconst userLogoutHelper = data => {\n  return {\n    type: 'DELETE_USERS_DATA',\n    payload: data\n  };\n};\n\nexport const UserSignUp = (formObj, history) => {\n  return async () => {\n    try {\n      console.log(Firebase);\n\n      if (formObj.email === '' && formObj.password === '') {\n        toast.error(`Enter details to signup!`, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        Firebase.auth().createUserWithEmailAndPassword(formObj.email, formObj.password).then(async res => {\n          res.user.updateProfile({\n            displayName: `${formObj.fName} ${formObj.lName}`,\n            phoneNumber: formObj.phone\n          });\n          await db.ref('Users').push({\n            fName: formObj.fName,\n            lName: formObj.lName,\n            email: formObj.email,\n            city: formObj.city,\n            state: formObj.state,\n            zip: formObj.zip,\n            password: formObj.password,\n            uid: res.user.uid\n          });\n          history('/');\n          toast.success(`User registered successfully!`, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }).catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n\n          if (errorCode === 'auth/weak-password') {\n            toast.error(`The password is too weak.`, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          } else {\n            toast.error(errorMessage, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n\n          console.log(error);\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n_c = UserSignUp;\nexport const userLogin = (loginCredentials, history) => {\n  return async dispatch => {\n    try {\n      if (loginCredentials.email === '' && loginCredentials.password === '') {\n        toast.error(`Enter details to signin!`, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        Firebase.auth().signInWithEmailAndPassword(loginCredentials.email, loginCredentials.password).then(async res => {\n          var _res$user;\n\n          // console.log(res);\n          // console.log('User logged-in successfully!');\n          const jwtToken = await ((_res$user = res.user) === null || _res$user === void 0 ? void 0 : _res$user.getIdToken()); // console.log('ðŸš€ ~ file: userAction.js ~ line 106 ~ .then ~ jwtToken', jwtToken);\n\n          localStorage.setItem('userJwtToken', jwtToken);\n          const decode = jwtDecode(jwtToken);\n          dispatch(userLoginHelper(decode));\n          history('/dashboard');\n          toast.success(`User logged-in successfully!`, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }).catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n\n          if (errorCode === 'auth/weak-password') {\n            toast.error(`The password is too weak.`, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          } else {\n            toast.error(errorMessage, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n\n          console.log(error);\n        });\n      }\n    } catch (err) {\n      if (err.response) {\n        const message = {\n          message: err.response.data.message\n        };\n        dispatch({\n          type: 'SET_LOGIN_ERRORS',\n          payload: message\n        });\n      } else {\n        const message = {\n          message: err\n        };\n        console.log(message);\n        dispatch({\n          type: 'SET_LOGIN_ERRORS',\n          payload: message\n        });\n      }\n    }\n  };\n};\nexport const userLogout = () => {\n  return dispatch => {\n    Firebase.auth().signOut().then(() => {\n      window.location.href = '/';\n      localStorage.removeItem('userJwtToken');\n      dispatch(userLogoutHelper({}));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignUp\");","map":{"version":3,"sources":["/home/subrata/Desktop/WebSkittersTask/src/store/actions/userAction.js"],"names":["Firebase","db","toast","jwtDecode","userLoginHelper","data","type","payload","userLogoutHelper","UserSignUp","formObj","history","console","log","email","password","error","position","POSITION","TOP_RIGHT","auth","createUserWithEmailAndPassword","then","res","user","updateProfile","displayName","fName","lName","phoneNumber","phone","ref","push","city","state","zip","uid","success","catch","errorCode","code","errorMessage","message","userLogin","loginCredentials","dispatch","signInWithEmailAndPassword","jwtToken","getIdToken","localStorage","setItem","decode","err","response","userLogout","signOut","window","location","href","removeItem"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport { Firebase, db } from 'database';\nimport { toast } from 'react-toastify';\nimport jwtDecode from 'jwt-decode';\n\nexport const userLoginHelper = (data) => {\n    return {\n        type: 'SET_USER_AUTH',\n        payload: data\n    };\n};\nconst userLogoutHelper = (data) => {\n    return {\n        type: 'DELETE_USERS_DATA',\n        payload: data\n    };\n};\nexport const UserSignUp = (formObj, history) => {\n    return async () => {\n        try {\n            console.log(Firebase);\n            if (formObj.email === '' && formObj.password === '') {\n                toast.error(`Enter details to signup!`, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            } else {\n                Firebase.auth()\n                    .createUserWithEmailAndPassword(formObj.email, formObj.password)\n                    .then(async (res) => {\n                        res.user.updateProfile({\n                            displayName: `${formObj.fName} ${formObj.lName}`,\n                            phoneNumber: formObj.phone\n                        });\n                        await db.ref('Users').push({\n                            fName: formObj.fName,\n                            lName: formObj.lName,\n                            email: formObj.email,\n                            city: formObj.city,\n                            state: formObj.state,\n                            zip: formObj.zip,\n                            password: formObj.password,\n                            uid: res.user.uid\n                        });\n                        history('/');\n                        toast.success(`User registered successfully!`, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    })\n                    .catch((error) => {\n                        const errorCode = error.code;\n                        const errorMessage = error.message;\n                        if (errorCode === 'auth/weak-password') {\n                            toast.error(`The password is too weak.`, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        } else {\n                            toast.error(errorMessage, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        }\n                        console.log(error);\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nexport const userLogin = (loginCredentials, history) => {\n    return async (dispatch) => {\n        try {\n            if (loginCredentials.email === '' && loginCredentials.password === '') {\n                toast.error(`Enter details to signin!`, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            } else {\n                Firebase.auth()\n                    .signInWithEmailAndPassword(loginCredentials.email, loginCredentials.password)\n                    .then(async (res) => {\n                        // console.log(res);\n                        // console.log('User logged-in successfully!');\n\n                        const jwtToken = await res.user?.getIdToken();\n                        // console.log('ðŸš€ ~ file: userAction.js ~ line 106 ~ .then ~ jwtToken', jwtToken);\n\n                        localStorage.setItem('userJwtToken', jwtToken);\n                        const decode = jwtDecode(jwtToken);\n                        dispatch(userLoginHelper(decode));\n                        history('/dashboard');\n                        toast.success(`User logged-in successfully!`, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    })\n                    .catch((error) => {\n                        const errorCode = error.code;\n                        const errorMessage = error.message;\n                        if (errorCode === 'auth/weak-password') {\n                            toast.error(`The password is too weak.`, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        } else {\n                            toast.error(errorMessage, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        }\n                        console.log(error);\n                    });\n            }\n        } catch (err) {\n            if (err.response) {\n                const message = { message: err.response.data.message };\n                dispatch({\n                    type: 'SET_LOGIN_ERRORS',\n                    payload: message\n                });\n            } else {\n                const message = { message: err };\n                console.log(message);\n                dispatch({\n                    type: 'SET_LOGIN_ERRORS',\n                    payload: message\n                });\n            }\n        }\n    };\n};\n\nexport const userLogout = () => {\n    return (dispatch) => {\n        Firebase.auth()\n            .signOut()\n            .then(() => {\n                window.location.href = '/';\n                localStorage.removeItem('userJwtToken');\n                dispatch(userLogoutHelper({}));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}